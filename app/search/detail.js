import React from 'react';
import {
    View,
    Text,
    StyleSheet,
    ScrollView,
    TouchableOpacity,
    Linking,
    Alert,
    Platform,
} from 'react-native';
import { useLocalSearchParams, useRouter } from 'expo-router';
import { useTheme } from '../../contexts/ThemeContext';
import { lightColors, darkColors } from '../../styles';
import AsyncStorage from '@react-native-async-storage/async-storage';

export default function DetailScreen() {
    const {
        title,
        desc,
        address,
        tel,
        link,
        category,
        mapx,
        mapy,
    } = useLocalSearchParams();

    const router = useRouter();
    const { isDarkMode } = useTheme();
    const colors = isDarkMode ? darkColors : lightColors;

    const cleanTitle = title?.replace(/<[^>]+>/g, '') || 'ÎèÑÏ∞©ÏßÄ';

    // ‚úÖ Î¶¨Î∑∞ ÏûêÍ≤© Ï†ÄÏû•
    const markStoreAsEligible = async () => {
        const timestamp = Date.now();
        const expiresAt = timestamp + 2 * 24 * 60 * 60 * 1000; // 2Ïùº

        const storeData = {
            storeKey: `${address}_${title}`,
            title: cleanTitle,
            address,
            mapx,
            mapy,
            timestamp,
            expiresAt,
        };

        await AsyncStorage.setItem('review_eligible', JSON.stringify(storeData));
        console.log('‚úÖ review_eligible Ï†ÄÏû•Îê®:', storeData);
    };

    const openNaverMap = async () => {
        if (!mapx || !mapy) {
            Alert.alert('Ïò§Î•ò', 'ÏßÄÎèÑ Ï†ïÎ≥¥Î•º Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§.');
            return;
        }

        // ‚úÖ Î®ºÏ†Ä Ï†ÄÏû•
        await markStoreAsEligible();

        const lat = parseFloat(mapy) / 1e7;
        const lng = parseFloat(mapx) / 1e7;

        const encodedName = encodeURIComponent(cleanTitle);
        const url = Platform.select({
            ios: `nmap://route/car?dlat=${lat}&dlng=${lng}&dname=${encodedName}&appname=com.khonan.myproject`,
            android: `nmap://route/car?dlat=${lat}&dlng=${lng}&dname=${encodedName}&appname=com.khonan.myproject`,
        });

        Linking.openURL(url).catch(() => {
            Alert.alert(
                'ÎÑ§Ïù¥Î≤Ñ ÏßÄÎèÑ Ïï± ÌïÑÏöî',
                'Ïï±Ïù¥ ÏÑ§ÏπòÎêòÏñ¥ ÏûàÏßÄ ÏïäÏïÑ Ïã§ÌñâÌï† Ïàò ÏóÜÏäµÎãàÎã§. ÏÑ§ÏπòÌïòÏãúÍ≤†ÏäµÎãàÍπå?',
                [
                    { text: 'Ï∑®ÏÜå', style: 'cancel' },
                    {
                        text: 'ÏÑ§ÏπòÌïòÍ∏∞',
                        onPress: () =>
                            Linking.openURL(
                                Platform.OS === 'ios'
                                    ? 'https://apps.apple.com/app/id311867728'
                                    : 'https://play.google.com/store/apps/details?id=com.nhn.android.nmap'
                            ),
                    },
                ]
            );
        });
    };

    return (
        <ScrollView style={[styles.container, { backgroundColor: colors.background }]}>
            <Text style={[styles.title, { color: colors.text }]}>{cleanTitle}</Text>

            <Text style={[styles.label, { color: colors.text }]}>Ïπ¥ÌÖåÍ≥†Î¶¨</Text>
            <Text style={[styles.value, { color: colors.text }]}>{category}</Text>

            <Text style={[styles.label, { color: colors.text }]}>Ï£ºÏÜå</Text>
            <Text style={[styles.value, { color: colors.text }]}>{address}</Text>

            <Text style={[styles.label, { color: colors.text }]}>Ï†ÑÌôîÎ≤àÌò∏</Text>
            <Text style={[styles.value, { color: colors.text }]}>{tel || 'Ï†ïÎ≥¥ ÏóÜÏùå'}</Text>

            <Text style={[styles.label, { color: colors.text }]}>ÏÑ§Î™Ö</Text>
            <Text style={[styles.value, { color: colors.text }]}>{desc || 'ÏóÜÏùå'}</Text>

            <TouchableOpacity
                onPress={openNaverMap}
                style={[styles.button, { backgroundColor: colors.accent }]}
            >
                <Text style={styles.buttonText}>üöó ÎÑ§Ïù¥Î≤Ñ Í∏∏Ï∞æÍ∏∞</Text>
            </TouchableOpacity>

            <TouchableOpacity
                onPress={() => router.back()}
                style={[styles.button, { marginTop: 12, backgroundColor: colors.border }]}
            >
                <Text style={[styles.buttonText, { color: colors.text }]}>‚Üê Îí§Î°úÍ∞ÄÍ∏∞</Text>
            </TouchableOpacity>
        </ScrollView>
    );
}

const styles = StyleSheet.create({
    container: {
        flex: 1,
        padding: 20,
    },
    title: {
        fontSize: 22,
        fontWeight: 'bold',
        marginBottom: 16,
    },
    label: {
        marginTop: 12,
        fontWeight: '600',
        fontSize: 14,
    },
    value: {
        fontSize: 14,
        marginTop: 4,
    },
    button: {
        marginTop: 20,
        paddingVertical: 12,
        borderRadius: 8,
        alignItems: 'center',
    },
    buttonText: {
        color: '#fff',
        fontWeight: 'bold',
        fontSize: 15,
    },
});
